buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
		springShellVersion = '1.2.0.RELEASE'
		kotlinVersion = '1.0.4'

		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}
	repositories {
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
	}
}

plugins {
	id 'com.github.ben-manes.versions' version '0.13.0'
//	id "com.github.hierynomus.license" version "0.13.1"
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

group 'io.gitlab.arturbosch.tinbo'
version '1.0.RC1'

jar {
	baseName = 'TiNBo'
	version = project.version
}

repositories {
	mavenCentral()
	mavenLocal()
	maven {
		url "http://dl.bintray.com/arturbosch/code-analysis"
	}
}

configurations {
	detekt
	smartsmells
}

task detekt {
	doLast {
		javaexec {
			main = "io.gitlab.arturbosch.detekt.cli.Main"
			classpath = configurations.detekt
			def input = "$project.projectDir.absolutePath"
			def config = "$project.projectDir/detekt.yml"
			def filters = ".*test.*"
			def rulesets = ""
			def params = ['-p', input, '-c', config, '-f', filters, '-r', rulesets]
			args(params)
		}
	}
}

task smartsmells(type: JavaExec) {
	main = "io.gitlab.arturbosch.smartsmells.Main"
	classpath = configurations.smartsmells
	def input = "$project.projectDir.absolutePath"
	def output = "$project.projectDir/smartsmells.xml"
	def params = ['-i', input, '-o', output, '-f', ".*/test/.*", "-fs"]
	args(params)
}

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
	compile project(":plugin-api")
	compile project(":tinbo-api")
	compile 'org.springframework.boot:spring-boot-starter'
	compile "org.springframework.shell:spring-shell:$springShellVersion"

	testCompile 'org.springframework.boot:spring-boot-starter-test'

	detekt 'io.gitlab.arturbosch.detekt:detekt-cli:1.0.0.M8'
	detekt 'io.gitlab.arturbosch.detekt:detekt-formatting:1.0.0.M8'
	smartsmells 'io.gitlab.arturbosch.smartsmells:SmartSmells:1.0.0.RC3'
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.1'
}

sourceSets {
	main.java.srcDirs += 'src/main/kotlin'
}
